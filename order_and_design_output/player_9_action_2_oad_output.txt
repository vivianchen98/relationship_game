Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11
Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11
Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11
Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11

****************** Checking [1, 1, 1, 1, 1, 1, 1, 1, 1] ******************

------ RESULT -------
total_num_constraints = 16
found = false
  6.050411 seconds (11.98 M allocations: 681.015 MiB, 3.48% gc time, 99.29% compilation time)
w not found! Move to next best a.

****************** Checking [2, 1, 1, 1, 1, 1, 1, 1, 1] ******************

------ RESULT -------
total_num_constraints = 16
found = true
obj_val = 0.0
w = [0.0, 0.0, 0.0]
z = [0.0, 0.0, 0.0]
  0.316738 seconds (941.89 k allocations: 57.757 MiB, 5.46% gc time, 94.71% compilation time)
x_tilde = [[1.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]

 w=([0.0, 0.0, 0.0]) does not lead to a=([2, 1, 1, 1, 1, 1, 1, 1, 1])! Move to next best a.

****************** Checking [1, 2, 1, 1, 1, 1, 1, 1, 1] ******************

------ RESULT -------
total_num_constraints = 16
found = true
obj_val = 0.0
w = [0.0, 0.0, 0.0]
z = [0.0, 0.0, 0.0]
  0.038321 seconds (429.85 k allocations: 30.089 MiB, 45.65% gc time, 16.15% compilation time)
x_tilde = [[1.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]

 w=([0.0, 0.0, 0.0]) does not lead to a=([1, 2, 1, 1, 1, 1, 1, 1, 1])! Move to next best a.

****************** Checking [1, 1, 2, 1, 1, 1, 1, 1, 1] ******************

------ RESULT -------
total_num_constraints = 16
found = true
obj_val = 0.0
w = [0.0, 0.0, 0.0]
z = [0.0, 0.0, 0.0]
  0.014932 seconds (428.71 k allocations: 30.028 MiB)
x_tilde = [[1.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]
 11.818579 seconds (35.93 M allocations: 1.963 GiB, 6.42% gc time, 98.41% compilation time)


****** SUMMARY ******
N = 9
M = 2
V = [122.5 122.5; 122.5 20.999999999999996;;; 16.5 20.999999999999996; 20.999999999999996 28.5;;;; 16.5 20.999999999999996; 20.999999999999996 28.5;;; 20.999999999999996 28.5; 28.5 39.0;;;;; 16.5 20.999999999999996; 20.999999999999996 28.5;;; 21.0 28.5; 28.5 39.0;;;; 21.0 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;;;; 16.5 20.999999999999996; 20.999999999999996 28.5;;; 21.0 28.5; 28.5 39.0;;;; 21.0 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;;; 21.0 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;;;;; 16.5 20.999999999999996; 20.999999999999996 28.5;;; 21.0 28.5; 28.5 39.0;;;; 21.0 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;;; 21.0 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;;;; 21.0 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;;;;;; 16.5 20.999999999999996; 20.999999999999996 28.5;;; 20.999999999999996 28.5; 28.5 39.0;;;; 20.999999999999996 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;;; 20.999999999999996 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;;;; 20.999999999999996 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;;;;; 20.999999999999996 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;; 52.5 69.0; 69.0 88.5;;; 69.0 88.5; 88.5 111.0;;;;;;;;; 16.5 20.999999999999996; 20.999999999999996 28.5;;; 21.0 28.5; 28.5 39.0;;;; 21.0 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;;; 21.0 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;;;; 21.0 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;;;;; 21.0 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;; 52.5 69.0; 69.0 88.5;;; 69.0 88.5; 88.5 111.0;;;;;;;; 21.0 28.5; 28.5 39.0;;; 28.5 39.0; 39.0 52.5;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;; 52.5 69.0; 69.0 88.5;;; 69.0 88.5; 88.5 111.0;;;;;;; 28.5 39.0; 39.0 52.5;;; 39.0 52.5; 52.5 69.0;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;; 52.5 69.0; 69.0 88.5;;; 69.0 88.5; 88.5 111.0;;;;;; 39.0 52.5; 52.5 69.0;;; 52.5 69.0; 69.0 88.5;;;; 52.5 69.0; 69.0 88.5;;; 69.0 88.5; 88.5 111.0;;;;; 52.5 69.0; 69.0 88.5;;; 69.0 88.5; 88.5 111.0;;;; 69.0 88.5; 88.5 111.0;;; 88.5 111.0; 111.0 121.5]
V_min_a = CartesianIndex(1, 1, 2, 1, 1, 1, 1, 1, 1)

------ Orignal Game Sol -------
x = [[1.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]
a = [1, 1, 2, 1, 1, 1, 1, 1, 1]

------ Modifed Game Sol -------
w = [0.0, 0.0, 0.0]
x_tilde = [[1.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]
a_tilde = [1, 1, 2, 1, 1, 1, 1, 1, 1]
