Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11
Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11
Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11
Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11
Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11
Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11

****************** Checking [1, 1, 1, 1, 1, 1, 1] ******************

------ RESULT -------
total_num_constraints = 14
found = false
  5.804186 seconds (11.35 M allocations: 644.773 MiB, 3.67% gc time, 99.85% compilation time)
w not found! Move to next best a.

****************** Checking [2, 1, 1, 1, 1, 1, 1] ******************

------ RESULT -------
total_num_constraints = 14
found = true
obj_val = 0.0
w = [0.0, 0.0, 0.0]
z = [0.0, 0.0, 0.0]
  0.307993 seconds (581.52 k allocations: 32.534 MiB, 6.18% gc time, 98.36% compilation time)
x_tilde = [[1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 0.0], [1.0, 0.0]]

 w=([0.0, 0.0, 0.0]) does not lead to a=([2, 1, 1, 1, 1, 1, 1])! Move to next best a.

****************** Checking [1, 2, 1, 1, 1, 1, 1] ******************

------ RESULT -------
total_num_constraints = 14
found = true
obj_val = 0.0
w = [0.0, 0.0, 0.0]
z = [0.0, 0.0, 0.0]
  0.004452 seconds (68.34 k allocations: 4.805 MiB)
x_tilde = [[1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 0.0], [1.0, 0.0]]

 w=([0.0, 0.0, 0.0]) does not lead to a=([1, 2, 1, 1, 1, 1, 1])! Move to next best a.

****************** Checking [1, 1, 2, 1, 1, 1, 1] ******************

------ RESULT -------
total_num_constraints = 14
found = true
obj_val = 0.0
w = [0.0, 0.0, 0.0]
z = [0.0, 0.0, 0.0]
  0.003785 seconds (68.34 k allocations: 4.805 MiB)
x_tilde = [[1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 0.0], [1.0, 0.0]]

 w=([0.0, 0.0, 0.0]) does not lead to a=([1, 1, 2, 1, 1, 1, 1])! Move to next best a.

****************** Checking [1, 1, 1, 2, 1, 1, 1] ******************

------ RESULT -------
total_num_constraints = 14
found = true
obj_val = 0.0
w = [0.0, 0.0, 0.0]
z = [0.0, 0.0, 0.0]
  0.003987 seconds (68.34 k allocations: 4.805 MiB)
x_tilde = [[1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 0.0], [1.0, 0.0]]

 w=([0.0, 0.0, 0.0]) does not lead to a=([1, 1, 1, 2, 1, 1, 1])! Move to next best a.

****************** Checking [1, 1, 1, 1, 2, 1, 1] ******************

------ RESULT -------
total_num_constraints = 14
found = true
obj_val = 0.0
w = [0.0, 0.0, 0.0]
z = [0.0, 0.0, 0.0]
  0.003704 seconds (68.34 k allocations: 4.805 MiB)
x_tilde = [[1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 0.0], [1.0, 0.0]]
 11.863833 seconds (34.16 M allocations: 1.853 GiB, 7.24% gc time, 99.52% compilation time)


****** SUMMARY ******
N = 7
M = 2
V = [74.5 74.5; 74.5 17.666666666666668;;; 74.5 17.666666666666668; 17.666666666666668 25.16666666666667;;;; 74.5 17.666666666666668; 17.666666666666668 25.16666666666667;;; 17.666666666666668 25.16666666666667; 25.16666666666667 35.66666666666667;;;;; 13.166666666666668 17.666666666666668; 17.666666666666668 25.16666666666667;;; 17.666666666666668 25.16666666666667; 25.16666666666667 35.66666666666667;;;; 17.666666666666668 25.16666666666667; 25.16666666666667 35.66666666666667;;; 25.16666666666667 35.66666666666667; 35.66666666666667 49.16666666666667;;;;;; 13.166666666666668 17.666666666666668; 17.666666666666668 25.16666666666667;;; 17.666666666666668 25.16666666666667; 25.16666666666667 35.66666666666667;;;; 17.666666666666668 25.166666666666668; 25.166666666666668 35.66666666666667;;; 25.166666666666668 35.66666666666667; 35.66666666666667 49.16666666666667;;;;; 17.666666666666668 25.166666666666668; 25.166666666666668 35.66666666666667;;; 25.166666666666668 35.66666666666667; 35.66666666666667 49.16666666666667;;;; 25.166666666666668 35.66666666666667; 35.66666666666667 49.16666666666667;;; 35.66666666666667 49.16666666666667; 49.16666666666667 65.66666666666667;;;;;;; 13.166666666666668 17.66666666666667; 17.66666666666667 25.16666666666667;;; 17.666666666666668 25.16666666666667; 25.16666666666667 35.66666666666667;;;; 17.666666666666668 25.166666666666668; 25.166666666666668 35.66666666666667;;; 25.166666666666668 35.66666666666667; 35.66666666666667 49.16666666666667;;;;; 17.666666666666668 25.166666666666668; 25.166666666666668 35.66666666666667;;; 25.166666666666668 35.66666666666667; 35.66666666666667 49.16666666666667;;;; 25.166666666666668 35.66666666666667; 35.66666666666667 49.16666666666667;;; 35.66666666666667 49.16666666666667; 49.16666666666667 65.66666666666667;;;;;; 17.666666666666668 25.166666666666668; 25.166666666666668 35.66666666666667;;; 25.166666666666668 35.66666666666667; 35.66666666666667 49.16666666666667;;;; 25.166666666666668 35.66666666666667; 35.66666666666667 49.16666666666667;;; 35.66666666666667 49.16666666666667; 49.16666666666667 65.66666666666667;;;;; 25.166666666666668 35.66666666666667; 35.66666666666667 49.16666666666667;;; 35.66666666666667 49.16666666666667; 49.16666666666667 65.66666666666667;;;; 35.66666666666667 49.16666666666667; 49.16666666666667 65.66666666666667;;; 49.16666666666667 65.66666666666667; 65.66666666666667 73.5]
V_min_a = CartesianIndex(1, 1, 1, 1, 2, 1, 1)

------ Orignal Game Sol -------
x = [[1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 0.0], [1.0, 0.0]]
a = [1, 1, 1, 1, 2, 1, 1]

------ Modifed Game Sol -------
w = [0.0, 0.0, 0.0]
x_tilde = [[1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [0.0, 1.0], [1.0, 0.0], [1.0, 0.0]]
a_tilde = [1, 1, 1, 1, 2, 1, 1]
