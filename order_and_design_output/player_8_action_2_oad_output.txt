Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11
Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11
Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11
Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11
Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11
Set parameter Username
Academic license - for non-commercial use only - expires 2023-05-11

****************** Checking [1, 1, 1, 1, 1, 1, 1, 1] ******************

------ RESULT -------
total_num_constraints = 15
found = false
  6.795644 seconds (11.59 M allocations: 657.546 MiB, 3.12% gc time, 99.70% compilation time)
w not found! Move to next best a.

****************** Checking [1, 1, 1, 2, 1, 1, 1, 1] ******************

------ RESULT -------
total_num_constraints = 15
found = true
obj_val = 0.0
w = [0.0, 0.0, 0.0]
z = [0.0, 0.0, 0.0]
  0.380747 seconds (685.58 k allocations: 39.838 MiB, 6.06% gc time, 90.89% compilation time)
x_tilde = [[0.0, 1.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]

 w=([0.0, 0.0, 0.0]) does not lead to a=([1, 1, 1, 2, 1, 1, 1, 1])! Move to next best a.

****************** Checking [1, 1, 1, 1, 1, 2, 1, 1] ******************

------ RESULT -------
total_num_constraints = 15
found = true
obj_val = 0.0
w = [0.0, 0.0, 0.0]
z = [0.0, 0.0, 0.0]
  0.037463 seconds (173.54 k allocations: 12.170 MiB, 55.56% gc time, 20.80% compilation time)
x_tilde = [[0.0, 1.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]

 w=([0.0, 0.0, 0.0]) does not lead to a=([1, 1, 1, 1, 1, 2, 1, 1])! Move to next best a.

****************** Checking [1, 1, 1, 1, 1, 1, 2, 1] ******************

------ RESULT -------
total_num_constraints = 15
found = true
obj_val = 0.0
w = [0.0, 0.0, 0.0]
z = [0.0, 0.0, 0.0]
  0.008577 seconds (172.40 k allocations: 12.109 MiB)
x_tilde = [[0.0, 1.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]

 w=([0.0, 0.0, 0.0]) does not lead to a=([1, 1, 1, 1, 1, 1, 2, 1])! Move to next best a.

****************** Checking [1, 1, 1, 1, 1, 1, 1, 2] ******************

------ RESULT -------
total_num_constraints = 15
found = true
obj_val = 0.0
w = [0.0, 0.0, 0.0]
z = [0.0, 0.0, 0.0]
  0.008197 seconds (172.40 k allocations: 12.109 MiB)
x_tilde = [[0.0, 1.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]

 w=([0.0, 0.0, 0.0]) does not lead to a=([1, 1, 1, 1, 1, 1, 1, 2])! Move to next best a.

****************** Checking [2, 1, 1, 1, 1, 1, 1, 1] ******************

------ RESULT -------
total_num_constraints = 15
found = true
obj_val = 0.0
w = [0.0, 0.0, 0.0]
z = [0.0, 0.0, 0.0]
  0.008487 seconds (172.40 k allocations: 12.109 MiB)
x_tilde = [[0.0, 1.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]
 13.041145 seconds (35.01 M allocations: 1.906 GiB, 6.24% gc time, 98.63% compilation time)


****** SUMMARY ******
N = 8
M = 2
V = [97.0 14.833333333333336; 14.833333333333336 19.33333333333333;;; 14.833333333333336 19.33333333333333; 19.33333333333333 26.83333333333334;;;; 97.0 19.333333333333332; 19.333333333333332 26.83333333333334;;; 19.333333333333332 26.83333333333334; 26.83333333333334 37.333333333333336;;;;; 14.833333333333336 19.333333333333332; 19.333333333333332 26.83333333333334;;; 19.333333333333332 26.83333333333334; 26.83333333333334 37.333333333333336;;;; 19.333333333333332 26.83333333333334; 26.83333333333334 37.333333333333336;;; 26.83333333333334 37.333333333333336; 37.333333333333336 50.83333333333333;;;;;; 97.0 19.333333333333332; 19.333333333333332 26.83333333333334;;; 19.333333333333332 26.83333333333334; 26.83333333333334 37.333333333333336;;;; 19.333333333333332 26.833333333333336; 26.833333333333336 37.333333333333336;;; 26.833333333333336 37.333333333333336; 37.333333333333336 50.83333333333333;;;;; 19.333333333333332 26.833333333333336; 26.833333333333336 37.333333333333336;;; 26.833333333333336 37.333333333333336; 37.333333333333336 50.83333333333333;;;; 26.833333333333336 37.333333333333336; 37.333333333333336 50.83333333333333;;; 37.333333333333336 50.83333333333333; 50.83333333333333 67.33333333333333;;;;;;; 97.0 19.333333333333332; 19.333333333333332 26.83333333333334;;; 19.333333333333332 26.83333333333334; 26.83333333333334 37.333333333333336;;;; 19.333333333333332 26.833333333333336; 26.833333333333336 37.333333333333336;;; 26.833333333333336 37.333333333333336; 37.333333333333336 50.83333333333333;;;;; 19.333333333333332 26.833333333333336; 26.833333333333336 37.333333333333336;;; 26.833333333333336 37.333333333333336; 37.333333333333336 50.83333333333333;;;; 26.833333333333336 37.333333333333336; 37.333333333333336 50.83333333333333;;; 37.333333333333336 50.83333333333333; 50.83333333333333 67.33333333333333;;;;;; 19.333333333333332 26.833333333333336; 26.833333333333336 37.333333333333336;;; 26.833333333333336 37.333333333333336; 37.333333333333336 50.83333333333333;;;; 26.833333333333336 37.333333333333336; 37.333333333333336 50.83333333333333;;; 37.333333333333336 50.83333333333333; 50.83333333333333 67.33333333333333;;;;; 26.833333333333336 37.333333333333336; 37.333333333333336 50.83333333333333;;; 37.333333333333336 50.83333333333333; 50.83333333333333 67.33333333333333;;;; 37.333333333333336 50.83333333333333; 50.83333333333333 67.33333333333334;;; 50.83333333333333 67.33333333333334; 67.33333333333334 86.83333333333333;;;;;;;; 97.0 19.333333333333332; 19.333333333333332 26.83333333333334;;; 19.333333333333332 26.83333333333334; 26.83333333333334 37.33333333333333;;;; 19.333333333333332 26.833333333333336; 26.833333333333336 37.33333333333333;;; 26.833333333333336 37.33333333333333; 37.33333333333333 50.83333333333333;;;;; 19.333333333333332 26.833333333333336; 26.833333333333336 37.33333333333333;;; 26.833333333333336 37.33333333333333; 37.33333333333333 50.83333333333333;;;; 26.833333333333336 37.33333333333333; 37.33333333333333 50.83333333333333;;; 37.33333333333333 50.83333333333333; 50.83333333333333 67.33333333333333;;;;;; 19.333333333333332 26.833333333333336; 26.833333333333336 37.33333333333333;;; 26.833333333333336 37.33333333333333; 37.33333333333333 50.83333333333333;;;; 26.833333333333336 37.33333333333333; 37.33333333333333 50.83333333333333;;; 37.33333333333333 50.83333333333333; 50.83333333333333 67.33333333333333;;;;; 26.833333333333336 37.33333333333333; 37.33333333333333 50.83333333333333;;; 37.33333333333333 50.83333333333333; 50.83333333333333 67.33333333333333;;;; 37.33333333333333 50.83333333333333; 50.83333333333333 67.33333333333334;;; 50.83333333333333 67.33333333333334; 67.33333333333334 86.83333333333333;;;;;;; 19.333333333333332 26.833333333333336; 26.833333333333336 37.33333333333333;;; 26.833333333333336 37.33333333333333; 37.33333333333333 50.83333333333333;;;; 26.833333333333336 37.33333333333333; 37.33333333333333 50.83333333333333;;; 37.33333333333333 50.83333333333333; 50.83333333333333 67.33333333333333;;;;; 26.833333333333336 37.33333333333333; 37.33333333333333 50.83333333333333;;; 37.33333333333333 50.83333333333333; 50.83333333333333 67.33333333333333;;;; 37.33333333333333 50.833333333333336; 50.833333333333336 67.33333333333334;;; 50.833333333333336 67.33333333333334; 67.33333333333334 86.83333333333333;;;;;; 26.833333333333336 37.33333333333333; 37.33333333333333 50.83333333333333;;; 37.33333333333333 50.83333333333333; 50.83333333333333 67.33333333333333;;;; 37.33333333333333 50.833333333333336; 50.833333333333336 67.33333333333334;;; 50.833333333333336 67.33333333333334; 67.33333333333334 86.83333333333334;;;;; 37.333333333333336 50.833333333333336; 50.833333333333336 67.33333333333334;;; 50.833333333333336 67.33333333333334; 67.33333333333334 86.83333333333334;;;; 50.833333333333336 67.33333333333334; 67.33333333333334 86.83333333333334;;; 67.33333333333334 86.83333333333334; 86.83333333333334 96.0]
V_min_a = CartesianIndex(2, 1, 1, 1, 1, 1, 1, 1)

------ Orignal Game Sol -------
x = [[0.0, 1.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]
a = [2, 1, 1, 1, 1, 1, 1, 1]

------ Modifed Game Sol -------
w = [0.0, 0.0, 0.0]
x_tilde = [[0.0, 1.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0], [1.0, 0.0]]
a_tilde = [2, 1, 1, 1, 1, 1, 1, 1]
